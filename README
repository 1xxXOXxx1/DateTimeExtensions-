DateTime Extensions

This extensions for System.DateTime adds methods to make calculations based on working days.
A working day is defined in IWorkingDayCultureInfo in two ways:
- IsWorkingDay(DayOfWeek dayOfWeek)
- IsWorkingDay(DateTime date)

The first defines witch day of the week is a working day (by default, working days are all week days except weekends).
The last does the same as the first, but it's also able to check for any holiday. By default, no holidays are defined,
unless there is a IWorkingDayCultureInfo implemented for the current thread CultureInfo.

Avaiable CultureInfo implementations:
- pt-PT
- pt-BR
- en-US
- en-GB
- fr-FR
- de-DE
- es-ES

your culture is not listed here? You have two options. You can wait until I get the mood to build it, or you can get
your hands dirty and contribute it.


Other Extensions:
FirstDayOfTheMonth()
LastDayOfTheMonth()
LastDayOfWeek(DayOfWeek)
NextDayOfWeek(DayOfWeek)
LastDayOfWeekOfTheMonth(DayOfWeek)
FirstDayOfWeekOfTheMonth(DayOfWeek)

How to Contribute
Feel free to fork the project, comment, flamme it, on github (https://github.com/kappy/DateTimeExtensions).


Version History
v1.2.1
- Reverted the holidays abolishment on pt-PT culture since 2012 introduced on v1.2 cause it's still being discussed on the parlament

v1.2
- Changed pt-PT culture to reflect the holidays abolishment since 2012
- Added the year depedent holiday (holidays that where created since, removed since, or only verified on certain years)
- breaking changes:
	- Holiday.GetInstance(int year) now returns DateTime? instead of DateTime
	- IHolidayStrategy.GetHolidaysOfYear(int year) was created to replace the property Holidays to be year independant
	- IHolidayStrategy.Holidays now return only the holidays of the current year

v1.1
- Added more cultures
- api refactoring

v1.0.1
- Added more cultures
- Added other general extension methods

v1.0
- Initial Version. The only suported Culture is pt-PT